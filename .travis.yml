---
sudo: required
dist: trusty

language: python
python: "2.7"

env:
  - ANSIBLE_VERSION=latest
  - ANSIBLE_VERSION=2.6.14
  - ANSIBLE_VERSION=2.6.13
  - ANSIBLE_VERSION=2.6.12
  - ANSIBLE_VERSION=2.6.11
  - ANSIBLE_VERSION=2.6.10
  - ANSIBLE_VERSION=2.6.9
  - ANSIBLE_VERSION=2.6.8
  - ANSIBLE_VERSION=2.6.7
  - ANSIBLE_VERSION=2.6.6
  - ANSIBLE_VERSION=2.6.5
  - ANSIBLE_VERSION=2.6.4
  - ANSIBLE_VERSION=2.6.3
  - ANSIBLE_VERSION=2.6.2
  - ANSIBLE_VERSION=2.6.1
  - ANSIBLE_VERSION=2.6.0
  - ANSIBLE_VERSION=2.5.15
  - ANSIBLE_VERSION=2.5.14
  - ANSIBLE_VERSION=2.5.13
  - ANSIBLE_VERSION=2.5.12
  - ANSIBLE_VERSION=2.5.11
  - ANSIBLE_VERSION=2.5.10
  - ANSIBLE_VERSION=2.5.9
  - ANSIBLE_VERSION=2.5.8
  - ANSIBLE_VERSION=2.5.7
  - ANSIBLE_VERSION=2.5.6
  - ANSIBLE_VERSION=2.5.5
  - ANSIBLE_VERSION=2.5.4
  - ANSIBLE_VERSION=2.5.3
  - ANSIBLE_VERSION=2.5.2
  - ANSIBLE_VERSION=2.5.1
  - ANSIBLE_VERSION=2.5.0

branches:
  only:
    - master

before_install:
  - sudo apt-get update -qq

  # Remove netcat-traditional
  - sudo apt-get remove --purge --yes netcat-traditional

install:
  # Install Ansible.
  - if [ "$ANSIBLE_VERSION" = "latest" ]; then pip install ansible; else pip install ansible==$ANSIBLE_VERSION; fi
  - if [ "$ANSIBLE_VERSION" = "latest" ]; then pip install ansible-lint; fi

script:
  # Check the role/playbook's syntax.
  - ansible-playbook -i tests/inventory tests/test.yml --syntax-check

  # Run the role/playbook with ansible-playbook.
  - ansible-playbook -i tests/inventory tests/test.yml -vvvv

  # Run the role/playbook again, checking to make sure it's idempotent.
  - >
    ansible-playbook -i tests/inventory tests/test.yml
    | grep -q 'changed=0.*failed=0'
    && (echo 'Idempotence test: pass' && exit 0)
    || (echo 'Idempotence test: fail' && exit 1)

  - if [ "$ANSIBLE_VERSION" = "latest" ]; then ansible-lint tests/test.yml; fi

notifications:
  email: false
  webhooks: https://galaxy.ansible.com/api/v1/notifications/
  slack:
    rooms:
      secure: "Cgg0bhoChfjeWW69pL/p9C34JTq92FPBdLL2ZuEJwG9SV3oGsUvAoTLoOzpPeKT3he5ZWu1SAjHkaFq5Rg8v+pDs4EM+0XnsN2QycEt+4BPdEZsBexOPLX7zakdP+dXKac/cdlNCcnQ25X2JSvR7xua+fqd4oW85+SRAsAqbFceTf/w58HTDBc2K9J1Tvhfpe0BVa53Dxz5h69fJXAKyRNyaM6SfbieWuCfDDu4qaCmwS5QlUAzrKwxZivE0oabGvIJkuHYGYsViH6NWhlqv3Xp08KfVWUUKpawFfrqlogbyTmf1ZngQRvKHPjZLJo4vao6KFAU0J8fUfueVXQXG/XSDUc4LliqreZ2t2RVxkIzuFQdr/+0NQ/M5uCZNoxnYxvMWXg/NQTvMO+pxUdX6HVxHxWVPOTlrr3XK1UX1/v0UhlsMTPucAQSe+8fLX7c1EXsOngMKhAEHmvkherM07iyNG9W1UXWERPje+h7U4eAVveI2yWpeBFgExsJ1i+AdLtO9ZwfGHPVeLy4eYNh+BRCBPyOfa7+8H1WAorLqlQnTLCzErTdQOHvk20CXD5XXEkvofsAQ3AGhId1ZGqF/uo2jCZJfpU4JFmtc0dhIZuwtBvLoRLtydrcDO1DVqFecJ1kLJr00hotBimCHrn23/2C49Yxg6h2Zv1fBMhHxrNo="
